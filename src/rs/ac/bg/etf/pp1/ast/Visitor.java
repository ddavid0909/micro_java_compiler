// generated with ast extension for cup
// version 0.8
// 19/7/2025 20:4:51


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Mulop Mulop);
    public void visit(MethodDecl MethodDecl);
    public void visit(NextVarDecl NextVarDecl);
    public void visit(Relop Relop);
    public void visit(Assignop Assignop);
    public void visit(ActParsNext ActParsNext);
    public void visit(MethodSignature MethodSignature);
    public void visit(StatementList StatementList);
    public void visit(ExprNext ExprNext);
    public void visit(ExprOrNone ExprOrNone);
    public void visit(Addop Addop);
    public void visit(BracedActParsList BracedActParsList);
    public void visit(DoWhileConditionList DoWhileConditionList);
    public void visit(OneConst OneConst);
    public void visit(RelExprOrNone RelExprOrNone);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(DesignatorNext DesignatorNext);
    public void visit(FormParsList FormParsList);
    public void visit(Condition Condition);
    public void visit(NextConstDecl NextConstDecl);
    public void visit(ActParsList ActParsList);
    public void visit(ArrayVar ArrayVar);
    public void visit(ExtendsDecl ExtendsDecl);
    public void visit(OrConditionList OrConditionList);
    public void visit(InterfaceMethods InterfaceMethods);
    public void visit(VarDeclList VarDeclList);
    public void visit(Expr Expr);
    public void visit(ActPars ActPars);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(TermNext TermNext);
    public void visit(AndConditionList AndConditionList);
    public void visit(ClassFields ClassFields);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(ClassDecl ClassDecl);
    public void visit(ConstDecl ConstDecl);
    public void visit(CondFact CondFact);
    public void visit(Setop Setop);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(MethodParamsList MethodParamsList);
    public void visit(FormPars FormPars);
    public void visit(ClassMethods ClassMethods);
    public void visit(NoComparisonExpression NoComparisonExpression);
    public void visit(ComparisonExpression ComparisonExpression);
    public void visit(ConditionFactor ConditionFactor);
    public void visit(NoAndConditions NoAndConditions);
    public void visit(AndConditions AndConditions);
    public void visit(CondTermStart CondTermStart);
    public void visit(ConditionTerm ConditionTerm);
    public void visit(NoOrConditions NoOrConditions);
    public void visit(OrConditions OrConditions);
    public void visit(ErrorConditionTermList ErrorConditionTermList);
    public void visit(ConditionTermsList ConditionTermsList);
    public void visit(DesignatorListEnd DesignatorListEnd);
    public void visit(ArrayElementAccess ArrayElementAccess);
    public void visit(ClassFieldAccess ClassFieldAccess);
    public void visit(ArrayIdentifier ArrayIdentifier);
    public void visit(MemberIdentifier MemberIdentifier);
    public void visit(DesignatorIdentifier DesignatorIdentifier);
    public void visit(DesignatorList DesignatorList);
    public void visit(Label Label);
    public void visit(AssignmentOperator AssignmentOperator);
    public void visit(IsLessThanOrEqual IsLessThanOrEqual);
    public void visit(IsLessThan IsLessThan);
    public void visit(IsGreaterThanOrEqual IsGreaterThanOrEqual);
    public void visit(IsGreaterThan IsGreaterThan);
    public void visit(IsNotEqual IsNotEqual);
    public void visit(IsEqual IsEqual);
    public void visit(Subtraction Subtraction);
    public void visit(Addition Addition);
    public void visit(Remainder Remainder);
    public void visit(Division Division);
    public void visit(Multiplication Multiplication);
    public void visit(Intersect Intersect);
    public void visit(Union Union);
    public void visit(BracketedExpressionFactor BracketedExpressionFactor);
    public void visit(AllocateVariableFactor AllocateVariableFactor);
    public void visit(AllocateArrayFactor AllocateArrayFactor);
    public void visit(BooleanFactor BooleanFactor);
    public void visit(CharacterFactor CharacterFactor);
    public void visit(NumberFactor NumberFactor);
    public void visit(MaxArrayElementDesignatorFactor MaxArrayElementDesignatorFactor);
    public void visit(DesignatorFactor DesignatorFactor);
    public void visit(ActParam ActParam);
    public void visit(NoNextActualParameter NoNextActualParameter);
    public void visit(NextActualParameter NextActualParameter);
    public void visit(ActualParameter ActualParameter);
    public void visit(FuncCallEnd FuncCallEnd);
    public void visit(FuncCallStart FuncCallStart);
    public void visit(NoBracedActualParametersList NoBracedActualParametersList);
    public void visit(BracedActualParametersList BracedActualParametersList);
    public void visit(NoActualParametersList NoActualParametersList);
    public void visit(ActualParametersList ActualParametersList);
    public void visit(NoNextFactorExpression NoNextFactorExpression);
    public void visit(NextFactorExpression NextFactorExpression);
    public void visit(Term Term);
    public void visit(NoNextTermExpression NoNextTermExpression);
    public void visit(NextTermExpression NextTermExpression);
    public void visit(MapExpression MapExpression);
    public void visit(NegativeExpression NegativeExpression);
    public void visit(Expression Expression);
    public void visit(NoExpression NoExpression);
    public void visit(ExpressionExists ExpressionExists);
    public void visit(DualIncrementDesignatorStatement DualIncrementDesignatorStatement);
    public void visit(ErrorDesignatorStatement ErrorDesignatorStatement);
    public void visit(SetAssignmentDesignatorStatement SetAssignmentDesignatorStatement);
    public void visit(DecrementDesignatorStatement DecrementDesignatorStatement);
    public void visit(IncrementDesignatorStatement IncrementDesignatorStatement);
    public void visit(MethodCallDesignatorStatement MethodCallDesignatorStatement);
    public void visit(ExprAssignmentDesignatorStatement ExprAssignmentDesignatorStatement);
    public void visit(DoWhileSuccess DoWhileSuccess);
    public void visit(NoDoWhileCondition NoDoWhileCondition);
    public void visit(MoreDoWhileConditions MoreDoWhileConditions);
    public void visit(OneDoWhileCondition OneDoWhileCondition);
    public void visit(ElseStart ElseStart);
    public void visit(IfStart IfStart);
    public void visit(DoStart DoStart);
    public void visit(DoWhileStatement DoWhileStatement);
    public void visit(IfElseStatement IfElseStatement);
    public void visit(IfStatement IfStatement);
    public void visit(PrintStatementYesNumber PrintStatementYesNumber);
    public void visit(PrintStatementNoNumber PrintStatementNoNumber);
    public void visit(ADesignatorStatement ADesignatorStatement);
    public void visit(ReturnStatement ReturnStatement);
    public void visit(ReadStatement ReadStatement);
    public void visit(NestedStatementList NestedStatementList);
    public void visit(ContinueStatement ContinueStatement);
    public void visit(BreakNumStatement BreakNumStatement);
    public void visit(BreakStatement BreakStatement);
    public void visit(NoStatementList NoStatementList);
    public void visit(StatementListExists StatementListExists);
    public void visit(ErrorFormalParameter ErrorFormalParameter);
    public void visit(NoFormalParameter NoFormalParameter);
    public void visit(FormalParameter FormalParameter);
    public void visit(FormParsType FormParsType);
    public void visit(ErrorFormalParametersList ErrorFormalParametersList);
    public void visit(NoFormalParametersList NoFormalParametersList);
    public void visit(FormalParametersList FormalParametersList);
    public void visit(ProcedureTypeName ProcedureTypeName);
    public void visit(FunctionTypeName FunctionTypeName);
    public void visit(ProcedureSignature ProcedureSignature);
    public void visit(FunctionSignature FunctionSignature);
    public void visit(NoMethodParametersList NoMethodParametersList);
    public void visit(MethodParametersList MethodParametersList);
    public void visit(MethodDeclaration MethodDeclaration);
    public void visit(InterfaceMethodSignature InterfaceMethodSignature);
    public void visit(InterfaceMethodDeclaration InterfaceMethodDeclaration);
    public void visit(NoInterfaceMethods NoInterfaceMethods);
    public void visit(InterfaceMethodsSignature InterfaceMethodsSignature);
    public void visit(InterfaceMethodsDeclaration InterfaceMethodsDeclaration);
    public void visit(InterfaceDeclStart InterfaceDeclStart);
    public void visit(InterfaceDecl InterfaceDecl);
    public void visit(NoClassMethodDeclaration NoClassMethodDeclaration);
    public void visit(ClassMethodDeclaration ClassMethodDeclaration);
    public void visit(NoClassFieldsDeclaration NoClassFieldsDeclaration);
    public void visit(ClassFieldDeclaration ClassFieldDeclaration);
    public void visit(ErrorExtendsDeclaration ErrorExtendsDeclaration);
    public void visit(NoExtendsDeclaration NoExtendsDeclaration);
    public void visit(ExtendsDeclaration ExtendsDeclaration);
    public void visit(ClassDeclStart ClassDeclStart);
    public void visit(ClassDeclaration ClassDeclaration);
    public void visit(IsNotArrayVar IsNotArrayVar);
    public void visit(IsArrayVar IsArrayVar);
    public void visit(ErrorInNextVariableDeclaration ErrorInNextVariableDeclaration);
    public void visit(NextVarDeclDerived1 NextVarDeclDerived1);
    public void visit(NextVariableDeclaration NextVariableDeclaration);
    public void visit(CurVarType CurVarType);
    public void visit(ErrorInVariableDeclaration ErrorInVariableDeclaration);
    public void visit(VariableDeclaration VariableDeclaration);
    public void visit(MethodDeclarationListEnd MethodDeclarationListEnd);
    public void visit(MethodDeclarationList MethodDeclarationList);
    public void visit(Type Type);
    public void visit(BooleanConstant BooleanConstant);
    public void visit(CharacterConstant CharacterConstant);
    public void visit(NumberConstant NumberConstant);
    public void visit(NoNextConstDecl NoNextConstDecl);
    public void visit(NextConstDeclaration NextConstDeclaration);
    public void visit(CurConstType CurConstType);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(NoVariableDeclaration NoVariableDeclaration);
    public void visit(Interfaces Interfaces);
    public void visit(Classes Classes);
    public void visit(Variables Variables);
    public void visit(Constants Constants);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
